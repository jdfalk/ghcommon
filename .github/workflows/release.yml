# file: .github/workflows/release.yml
# version: 2.0.0
# guid: a1b2c3d4-e5f6-7a8b-9c0d-1e2f3a4b5c6d
#
# ⚠️  CENTRAL SOURCE OF TRUTH: This file is maintained in jdfalk/ghcommon
# To update this workflow:
# 1. Edit the file in jdfalk/ghcommon/.github/workflows/release.yml
# 2. Commit changes to ghcommon
# 3. Copy to other repositories using the sync process
#
# DO NOT edit this file directly in individual repositories!

# file: .github/workflows/release.yml
# version: 1.0.0
# guid: f5a6b7c8-d9e0-f1a2-b3c4-d5e6f7a8b9c0
# DO NOT EDIT: This file is managed centrally in ghcommon repository
# To update: Edit the version in jdfalk/ghcommon and it will be synced to all repos

name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release type (will override conventional commit detection)"
        required: false
        default: "auto"
        type: choice
        options:
          - auto
          - patch
          - minor
          - major
      prerelease:
        description: "Is this a prerelease?"
        required: false
        default: false
        type: boolean
      draft:
        description: "Create as draft?"
        required: false
        default: false
        type: boolean
      force_language:
        description: "Force specific language (optional)"
        required: false
        default: "auto"
        type: choice
        options:
          - auto
          - rust
          - go
          - python
          - javascript
          - typescript

permissions:
  contents: write
  packages: write
  attestations: write
  id-token: write

jobs:
  detect-language:
    name: Detect Programming Language
    runs-on: ubuntu-latest
    outputs:
      language: ${{ steps.detect.outputs.language }}
      should-release: ${{ steps.detect.outputs.should-release }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect primary language
        id: detect
        env:
          FORCE_LANGUAGE: ${{ github.event.inputs.force_language }}
        run: |
          # If language is forced via input, use that
          if [[ "$FORCE_LANGUAGE" != "auto" && "$FORCE_LANGUAGE" != "" ]]; then
            echo "language=$FORCE_LANGUAGE" >> $GITHUB_OUTPUT
            echo "should-release=true" >> $GITHUB_OUTPUT
            echo "Forced language: $FORCE_LANGUAGE"
            exit 0
          fi

          # Auto-detect based on key files
          DETECTED_LANGUAGE=""

          # Check for Rust
          if [[ -f "Cargo.toml" ]]; then
            DETECTED_LANGUAGE="rust"
          # Check for Go
          elif [[ -f "go.mod" ]]; then
            DETECTED_LANGUAGE="go"
          # Check for Python
          elif [[ -f "pyproject.toml" || -f "setup.py" || -f "requirements.txt" ]]; then
            DETECTED_LANGUAGE="python"
          # Check for Node.js/JavaScript
          elif [[ -f "package.json" ]]; then
            # Check if it's TypeScript
            if [[ -f "tsconfig.json" || -f "*.ts" ]]; then
              DETECTED_LANGUAGE="typescript"
            else
              DETECTED_LANGUAGE="javascript"
            fi
          # Default fallback
          else
            echo "No supported language detected"
            echo "should-release=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "language=$DETECTED_LANGUAGE" >> $GITHUB_OUTPUT
          echo "should-release=true" >> $GITHUB_OUTPUT
          echo "Detected language: $DETECTED_LANGUAGE"

  release-rust:
    name: Rust Release
    needs: detect-language
    if: needs.detect-language.outputs.should-release == 'true' && needs.detect-language.outputs.language == 'rust'
    uses: ./.github/workflows/release-rust.yml
    with:
      release_type: ${{ github.event.inputs.release_type || 'auto' }}
      prerelease: ${{ github.event.inputs.prerelease == 'true' }}
      draft: ${{ github.event.inputs.draft == 'true' }}
    secrets: inherit

  release-go:
    name: Go Release
    needs: detect-language
    if: needs.detect-language.outputs.should-release == 'true' && needs.detect-language.outputs.language == 'go'
    uses: ./.github/workflows/release-go.yml
    with:
      release_type: ${{ github.event.inputs.release_type || 'auto' }}
      prerelease: ${{ github.event.inputs.prerelease == 'true' }}
      draft: ${{ github.event.inputs.draft == 'true' }}
    secrets: inherit

  release-python:
    name: Python Release
    needs: detect-language
    if: needs.detect-language.outputs.should-release == 'true' && needs.detect-language.outputs.language == 'python'
    uses: ./.github/workflows/release-python.yml
    with:
      release_type: ${{ github.event.inputs.release_type || 'auto' }}
      prerelease: ${{ github.event.inputs.prerelease == 'true' }}
      draft: ${{ github.event.inputs.draft == 'true' }}
    secrets: inherit

  release-javascript:
    name: JavaScript Release
    needs: detect-language
    if: needs.detect-language.outputs.should-release == 'true' && needs.detect-language.outputs.language == 'javascript'
    uses: ./.github/workflows/release-javascript.yml
    with:
      release_type: ${{ github.event.inputs.release_type || 'auto' }}
      prerelease: ${{ github.event.inputs.prerelease == 'true' }}
      draft: ${{ github.event.inputs.draft == 'true' }}
    secrets: inherit

  release-typescript:
    name: TypeScript Release
    needs: detect-language
    if: needs.detect-language.outputs.should-release == 'true' && needs.detect-language.outputs.language == 'typescript'
    uses: ./.github/workflows/release-typescript.yml
    with:
      release_type: ${{ github.event.inputs.release_type || 'auto' }}
      prerelease: ${{ github.event.inputs.prerelease == 'true' }}
      draft: ${{ github.event.inputs.draft == 'true' }}
    secrets: inherit

  # Docker plugin - builds container images using release artifacts
  release-docker:
    name: Docker Release
    needs: [detect-language, release-rust, release-go, release-python, release-javascript, release-typescript]
    if: always() && needs.detect-language.outputs.should-release == 'true' && (needs.release-rust.result == 'success' || needs.release-go.result == 'success' || needs.release-python.result == 'success' || needs.release-javascript.result == 'success' || needs.release-typescript.result == 'success')
    uses: ./.github/workflows/release-docker.yml
    with:
      depends_on_language: ${{ needs.detect-language.outputs.language }}
      use_release_artifacts: true
      platforms: "linux/amd64,linux/arm64"
      registry: "ghcr.io"
      push: true
      use_buildah: false
    secrets: inherit
