# file: .github/workflows/release-rust.yml
# version: 1.1.0
# guid: a1b2c3d4-e5f6-7a8b-9c0d-1e2f3a4b5c6d
# DO NOT EDIT: This file is managed centrally in ghcommon repository
# To update: Edit the version in jdfalk/ghcommon and it will be synced to all repos

name: Rust Release

on:
  workflow_call:
    inputs:
      matrix:
        description: 'Matrix configuration for Rust builds (JSON)'
        required: false
        type: string
        default: '{"include":[{"rust-version":"1.76","os":"ubuntu-latest","primary":true}]}'
      skip-tests:
        description: 'Skip running tests'
        required: false
        type: boolean
        default: false
      protobuf-artifacts-available:
        description: 'Whether protobuf artifacts are available'
        required: false
      protobuf-artifacts-available:
        description: 'Whether protobuf artifacts are available'
        required: false
        type: boolean
        default: false
    secrets:
      GITHUB_TOKEN:
        required: true

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Rust matrix build
  build-rust:
    name: Rust (${{ matrix.rust-version }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(inputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download protobuf artifacts
        if: inputs.protobuf-artifacts-available
        uses: actions/download-artifact@v4
        with:
          name: protobuf-generated
        continue-on-error: true

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust-version }}
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: rust-${{ matrix.rust-version }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            rust-${{ matrix.rust-version }}-

      - name: Build
        run: cargo build --verbose --release

      - name: Test
        if: ${{ !inputs.skip-tests }}
        run: |
          cargo test --verbose
          cargo clippy --all-targets --all-features -- -D warnings
          cargo fmt --all -- --check

      - name: Generate coverage
        if: matrix.primary && !inputs.skip-tests
        run: |
          cargo install cargo-tarpaulin || true
          cargo tarpaulin --out xml --output-dir target/coverage/ || true

      - name: Upload coverage
        if: matrix.primary && !inputs.skip-tests
        uses: actions/upload-artifact@v4
        with:
          name: rust-coverage
          path: target/coverage/
        continue-on-error: true

      - name: Upload build artifacts
        if: matrix.primary
        uses: actions/upload-artifact@v4
        with:
          name: rust-build-artifacts
          path: |
            target/release/
          retention-days: 1
        run: python3 .github/scripts/sync-release-handle-manual-release.py