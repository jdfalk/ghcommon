# file: .github/workflows/commit-override-handler.yml
# version: 1.3.0
# guid: 7a8b9c0d-1e2f-3456-789a-bcdef0123456

# ‚ö†Ô∏è  DO NOT EDIT DIRECTLY - This file is managed in ghcommon repository
# All changes should be made in jdfalk/ghcommon and will be synced to other repositories
# Edit this file at: https://github.com/jdfalk/ghcommon/edit/main/.github/workflows/commit-override-handler.yml

name: Commit Override Handler

on:
  workflow_call:
    outputs:
      skip-tests:
        description: "Whether to skip test execution"
        value: ${{ jobs.check-overrides.outputs.skip-tests }}
      skip-validation:
        description: "Whether to skip validation/linting"
        value: ${{ jobs.check-overrides.outputs.skip-validation }}
      skip-ci:
        description: "Whether to skip CI entirely"
        value: ${{ jobs.check-overrides.outputs.skip-ci }}
      skip-build:
        description: "Whether to skip build steps"
        value: ${{ jobs.check-overrides.outputs.skip-build }}
      commit-message:
        description: "The commit message(s) analyzed"
        value: ${{ jobs.check-overrides.outputs.commit-message }}
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

permissions:
  contents: read
  actions: read

jobs:
  check-overrides:
    name: Check Commit Overrides
    runs-on: ubuntu-latest
    outputs:
      skip-tests: ${{ steps.check.outputs.skip-tests }}
      skip-validation: ${{ steps.check.outputs.skip-validation }}
      skip-ci: ${{ steps.check.outputs.skip-ci }}
      skip-build: ${{ steps.check.outputs.skip-build }}
      commit-message: ${{ steps.check.outputs.commit-message }}
    steps:
      # NOTE: fetch-depth set to 0 and explicit base branch fetch added to prevent
      # 'fatal: bad revision' / exit 128 errors when computing commit range
      # on PRs. (Previously the job failed before producing outputs.)
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          # Need full history (or at least all commits in PR) plus base branch ref for range comparisons
          fetch-depth: 0

      - name: Fetch base branch ref
        if: ${{ github.event_name == 'pull_request' }}
        env:
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
        run: |
          # Ensure the base branch ref exists locally; without this git log origin/<base>..HEAD fails (exit 128)
          git fetch --no-tags --depth=1 origin "$DEFAULT_BRANCH"
          echo "Fetched base branch $DEFAULT_BRANCH for comparison"

      - name: Check commit messages for override keywords
        id: check
        env:
          EVENT_NAME: ${{ github.event_name }}
          PULL_BASE_REF: ${{ github.event.pull_request.base.ref }}
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
        run: |
          python3 scripts/workflows/check_commit_overrides.py

  # This job can be referenced by other workflows to conditionally skip steps
  notify-overrides:
    name: Notify Override Status
    runs-on: ubuntu-latest
    needs: check-overrides
    if: needs.check-overrides.outputs.skip-ci != 'true'
    steps:
      - name: Display override status
        env:
          SKIP_TESTS: ${{ needs.check-overrides.outputs.skip-tests }}
          SKIP_VALIDATION: ${{ needs.check-overrides.outputs.skip-validation }}
          SKIP_BUILD: ${{ needs.check-overrides.outputs.skip-build }}
        run: |
          SUMMARY_FILE="${GITHUB_STEP_SUMMARY}"
          {
            echo "## üéõÔ∏è CI Override Configuration"
            echo ""
            echo "The following overrides are active for this workflow:"
            echo ""
          } >> "${SUMMARY_FILE}"

          if [ "$SKIP_TESTS" = "true" ]; then
            echo "- üö´ **Tests will be skipped**" >> "${SUMMARY_FILE}"
          else
            echo "- ‚úÖ **Tests will run normally**" >> "${SUMMARY_FILE}"
          fi

          if [ "$SKIP_VALIDATION" = "true" ]; then
            echo "- üö´ **Validation/Linting will be skipped**" >> "${SUMMARY_FILE}"
          else
            echo "- ‚úÖ **Validation/Linting will run normally**" >> "${SUMMARY_FILE}"
          fi

          if [ "$SKIP_BUILD" = "true" ]; then
            echo "- üö´ **Build steps will be skipped**" >> "${SUMMARY_FILE}"
          else
            echo "- ‚úÖ **Build steps will run normally**" >> "${SUMMARY_FILE}"
          fi

          {
            echo ""
            echo "### Available Override Keywords"
            echo ""
            echo "Use these in your commit messages to control CI behavior:"
            echo ""
            echo "- **Skip Tests**: \`[skip tests]\`, \`[no tests]\`, \`SKIP TESTS\`"
            echo "- **Skip Validation**: \`[skip validation]\`, \`[skip lint]\`, \`SKIP VALIDATION\`"
            echo "- **Skip CI**: \`[skip ci]\`, \`[ci skip]\`, \`SKIP CI\`"
            echo "- **Skip Build**: \`[skip build]\`, \`[no build]\`, \`SKIP BUILD\`"
          } >> "${SUMMARY_FILE}"
