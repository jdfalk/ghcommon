# file: .github/workflows/reusable-repo-settings.yml
# Reusable workflow to apply default repository settings and provide commit guidance

name: Reusable - Repository Settings

on:
  workflow_call:

jobs:
  apply-settings:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Configure repository settings
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          script: |
            await github.rest.repos.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              allow_merge_commit: false,
              allow_squash_merge: false,
              allow_rebase_merge: true,
              delete_branch_on_merge: true
            });

  warn-conventional-commits:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 20
      - name: Check commit messages
        id: check
        run: |
          if git log --format=%s "${{ github.event.pull_request.base.sha }}..HEAD" | \
             grep -Ev '^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\(.+\))?!?:'; then
            echo "needs_fix=true" >> "$GITHUB_OUTPUT"
          else
            echo "needs_fix=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Comment on PR if needed
        if: steps.check.outputs.needs_fix == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: '⚠️ Commit messages should follow the conventional commit format. Run `git commit --amend` or `git cz` to fix.'
            });

  warn-semver:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Detect semantic versioning
        id: semver
        run: |
          if ! grep -q '"version"' package.json 2>/dev/null && [ ! -f version.txt ]; then
            echo "missing=true" >> "$GITHUB_OUTPUT"
          else
            echo "missing=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Comment on PR if missing
        if: steps.semver.outputs.missing == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: '⚠️ Semantic versioning not detected. Consider enabling semantic versioning for releases.'
            });
